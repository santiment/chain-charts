apiVersion: {{ template "avalanche.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "avalanche.fullname" . }}
  labels:
    app: {{ template "avalanche.name" . }}
    chart: {{ template "avalanche.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  podManagementPolicy: "Parallel"
  serviceName: {{ template "avalanche.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "avalanche.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "avalanche.fullname" . }}
      labels:
        app: {{ template "avalanche.name" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | trimSuffix "\n" | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      serviceAccountName: {{ include "avalanche.serviceAccountName" . | quote }}
      containers:
        {{- if .Values.sidecarContainers }}
        {{- toYaml .Values.sidecarContainers | nindent 8 }}
        {{- end }}
        {{- if .Values.proxy.enabled }}
        - name: {{ template "avalanche.proxyname" . }}
          image: {{ .Values.proxy.image }}
          imagePullPolicy: {{ .Values.proxy.pullPolicy }}
          ports:
            - name: proxy
              containerPort: {{ .Values.proxy.port }}
          {{- if .Values.proxy.resources }}
          resources:
          {{- toYaml .Values.proxy.resources | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /nginx_status
              port: {{ .Values.proxy.port }}
            initialDelaySeconds: 120
            timeoutSeconds: 30
          volumeMounts:
            - name: {{ template "avalanche.proxyname" . }}
              mountPath: /etc/nginx/conf.d/default.conf
              readOnly: true
              subPath: nginx.conf
        {{- end }}
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/avalanchego/build/avalanchego",
            {{- if ne .Values.service.http.port "9650" }}
            "--http-port={{ .Values.service.http.port }}",
            {{- end }}
            {{- if ne .Values.service.staking.port "9651" }}
            "--staking-port={{ .Values.service.staking.port}} ",
            {{- end }}
            {{- range $key, $value := .Values.extraArgs }}
            {{- if $value }}
            "{{ $key }}={{ $value }}",
            {{- else }}
            "{{ $key }}",
            {{- end }}
            {{- end }}
            "--db-dir={{ .Values.mountPath }}"]
          volumeMounts:
            - name: data
              mountPath: {{ .Values.mountPath }}
          ports:
          - containerPort: {{ .Values.service.http.port }}
            name: http
            protocol: TCP
          - containerPort: {{ .Values.service.staking.port }}
            name: staking
            protocol: TCP
          env:
            {{- range $key, $val := .Values.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /ext/health/liveness
              port: {{ .Values.service.http.port }}
            initialDelaySeconds: 120
            timeoutSeconds: 30
    {{- if .Values.proxy.enabled }}
      volumes:
        - name: {{ template "avalanche.proxyname" . }}
          configMap:
            name: {{ template "avalanche.proxyname" . }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
    - metadata:
        {{- if $.Values.persistence.VolumeName }}
        name: {{ $.Values.persistence.VolumeName }}
        {{- else }}
        name: data
        {{- end}}
      spec:
        accessModes: [ {{ $.Values.persistence.accessMode | quote }} ]
        {{- if $.Values.persistence.storageClass }}
        storageClassName: {{ $.Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ $.Values.persistence.size }}
